{"ast":null,"code":"var _s = $RefreshSig$();\n// import { useState } from \"react\";\n// import AnchorLink from \"react-anchor-link-smooth-scroll\";\n// import useMediaQuery from \"../hooks/useMediaQuery\";\n\n// const Link=({page,selectedPage,setSelectedPage})=>{\n//     const lowerCasePage=page.toLowerCase();\n//     return(\n//         <AnchorLink\n//             className={`${selectedPage === lowerCasePage ? \"text-yellow\" : \"\"}\n//                 hover:text-yellow transition duration-500`}\n//             href={'#${lowerCasePage}'}\n//             onClick={()=>setSelectedPage(lowerCasePage)}\n//         >\n//             {page}\n//         </AnchorLink>\n//     )\n// }\n\n// const Navbar = ({selectedPage,setSelectedPage})=>{\n//     const [isMenuToggled,setIsMenuToggled]=useState(false);\n//     const isDesktop = useMediaQuery(\"(min-width: 768px)\");\n\n//     return(\n//         <nav className={'z-40 w-full ficed top-0 py-6'}>\n//             <div className=\"flex items-center justify-between mx-auto w-5/6\">\n//                 <h4 className=\"font-playfair text-3xl font-bold\">DB</h4>\n//                 {/* DESKTOP NAV */}\n//                 {isDesktop ? (\n//                     <div className=\"flex justify-between gap-16 font-opensans text-sm font-semibold\">\n//                         <Link\n//                             page=\"Home\"\n//                             selectedPage={selectedPage}\n//                             setSelectedPage={setSelectedPage}\n//                         />\n//                         <Link\n//                             page=\"Skills\"\n//                             selectedPage={selectedPage}\n//                             setSelectedPage={setSelectedPage}\n//                         />\n//                         <Link\n//                             page=\"Projects\"\n//                             selectedPage={selectedPage}\n//                             setSelectedPage={setSelectedPage}\n//                         />\n//                         <Link\n//                             page=\"About me\"\n//                             selectedPage={selectedPage}\n//                             setSelectedPage={setSelectedPage}\n//                         />\n\n//                     </div>\n//                 ) : (<div></div>)}\n//             </div>\n//         </nav>\n//     )\n// }\n\n// export default Navbar;\nimport { useState, useEffect } from \"react\";\nconst useMediaQuery = query => {\n  _s();\n  const [matches, setMatches] = useState(false);\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [matches, query]);\n  return matches;\n};\n_s(useMediaQuery, \"/aV7jSECvYA0Ea4uAEPK2AzROhs=\");\nexport default useMediaQuery;","map":{"version":3,"names":["useState","useEffect","useMediaQuery","query","matches","setMatches","media","window","matchMedia","listener","addEventListener","removeEventListener"],"sources":["/Users/divv/Desktop/portfolio/react-portfolio/src/scenes/Navbar.jsx"],"sourcesContent":["// import { useState } from \"react\";\n// import AnchorLink from \"react-anchor-link-smooth-scroll\";\n// import useMediaQuery from \"../hooks/useMediaQuery\";\n\n// const Link=({page,selectedPage,setSelectedPage})=>{\n//     const lowerCasePage=page.toLowerCase();\n//     return(\n//         <AnchorLink\n//             className={`${selectedPage === lowerCasePage ? \"text-yellow\" : \"\"}\n//                 hover:text-yellow transition duration-500`}\n//             href={'#${lowerCasePage}'}\n//             onClick={()=>setSelectedPage(lowerCasePage)}\n//         >\n//             {page}\n//         </AnchorLink>\n//     )\n// }\n\n// const Navbar = ({selectedPage,setSelectedPage})=>{\n//     const [isMenuToggled,setIsMenuToggled]=useState(false);\n//     const isDesktop = useMediaQuery(\"(min-width: 768px)\");\n\n//     return(\n//         <nav className={'z-40 w-full ficed top-0 py-6'}>\n//             <div className=\"flex items-center justify-between mx-auto w-5/6\">\n//                 <h4 className=\"font-playfair text-3xl font-bold\">DB</h4>\n//                 {/* DESKTOP NAV */}\n//                 {isDesktop ? (\n//                     <div className=\"flex justify-between gap-16 font-opensans text-sm font-semibold\">\n//                         <Link\n//                             page=\"Home\"\n//                             selectedPage={selectedPage}\n//                             setSelectedPage={setSelectedPage}\n//                         />\n//                         <Link\n//                             page=\"Skills\"\n//                             selectedPage={selectedPage}\n//                             setSelectedPage={setSelectedPage}\n//                         />\n//                         <Link\n//                             page=\"Projects\"\n//                             selectedPage={selectedPage}\n//                             setSelectedPage={setSelectedPage}\n//                         />\n//                         <Link\n//                             page=\"About me\"\n//                             selectedPage={selectedPage}\n//                             setSelectedPage={setSelectedPage}\n//                         />\n\n//                     </div>\n//                 ) : (<div></div>)}\n//             </div>\n//         </nav>\n//     )\n// }\n\n// export default Navbar;\nimport { useState, useEffect } from \"react\";\n\nconst useMediaQuery = (query) => {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [matches, query]);\n\n  return matches;\n};\n\nexport default useMediaQuery;"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMK,KAAK,GAAGC,MAAM,CAACC,UAAU,CAACL,KAAK,CAAC;IACtC,IAAIG,KAAK,CAACF,OAAO,KAAKA,OAAO,EAAE;MAC7BC,UAAU,CAACC,KAAK,CAACF,OAAO,CAAC;IAC3B;IACA,MAAMK,QAAQ,GAAG,MAAMJ,UAAU,CAACC,KAAK,CAACF,OAAO,CAAC;IAChDG,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAED,QAAQ,CAAC;IAC3C,OAAO,MAAMF,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEF,QAAQ,CAAC;EAC7D,CAAC,EAAE,CAACL,OAAO,EAAED,KAAK,CAAC,CAAC;EAEpB,OAAOC,OAAO;AAChB,CAAC;AAAC,GAdIF,aAAa;AAgBnB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}