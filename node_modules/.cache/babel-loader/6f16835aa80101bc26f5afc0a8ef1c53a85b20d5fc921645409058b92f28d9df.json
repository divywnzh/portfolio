{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useMediaQuery = query => {\n  _s();\n  const [matches, setMatches] = useState(false);\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [matches, query]);\n  return matches;\n};\n_s(useMediaQuery, \"/aV7jSECvYA0Ea4uAEPK2AzROhs=\");\nexport default useMediaQuery;","map":{"version":3,"names":["useState","useEffect","useMediaQuery","query","matches","setMatches","media","window","matchMedia","listener","addEventListener","removeEventListener"],"sources":["/Users/divv/Desktop/portfolio/react-portfolio/src/hooks/useMediaQuery.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useMediaQuery = (query) => {\n    const[matches, setMatches]=useState(false);\n\n    useEffect(()=>{\n        const media=window.matchMedia(query);\n        if(media.matches!==matches){\n            setMatches(media.matches);\n        }\n        const listener=()=>setMatches(media.matches);\n        window.addEventListener(\"resize\",listener);\n        return ()=> window.removeEventListener(\"resize\",listener);\n    },[matches,query]);\n    return matches;\n};\n\nexport default useMediaQuery;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAACL,QAAQ,CAAC,KAAK,CAAC;EAE1CC,SAAS,CAAC,MAAI;IACV,MAAMK,KAAK,GAACC,MAAM,CAACC,UAAU,CAACL,KAAK,CAAC;IACpC,IAAGG,KAAK,CAACF,OAAO,KAAGA,OAAO,EAAC;MACvBC,UAAU,CAACC,KAAK,CAACF,OAAO,CAAC;IAC7B;IACA,MAAMK,QAAQ,GAAC,MAAIJ,UAAU,CAACC,KAAK,CAACF,OAAO,CAAC;IAC5CG,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAACD,QAAQ,CAAC;IAC1C,OAAO,MAAKF,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAACF,QAAQ,CAAC;EAC7D,CAAC,EAAC,CAACL,OAAO,EAACD,KAAK,CAAC,CAAC;EAClB,OAAOC,OAAO;AAClB,CAAC;AAAC,GAbIF,aAAa;AAenB,eAAeA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}